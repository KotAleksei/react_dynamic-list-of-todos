{"version":3,"sources":["ToDoItem.js","ToDoList.js","sortTodos.js","App.js","api.js","index.js"],"names":["ToDoItem","props","name","title","completed","react_default","a","createElement","Grid","Row","Column","width","textAlign","Checkbox","checked","ToDoList","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inherits","createClass","key","value","_this2","_this$props","todos","sortTodos","Fragment","className","map","el","index","GridColumn","onClick","setState","prevState","toUpperCase","slice","todoEl","ToDoItem_ToDoItem","user","React","Component","sortField","callbackMap","titleup","b","localeCompare","titledown","nameup","toLowerCase","namedown","completedup","completeddown","callback","toConsumableArray","sort","App","load","buttonInnerText","disableButton","sortedList","array","Promise","all","fetch","then","resp","json","users","fullArr","find","id","userId","ToDoList_ToDoList","Button","color","inverted","loadInformation","disabled","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.edda1f69.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, Checkbox } from \"semantic-ui-react\";\n\nexport const ToDoItem = (props) => {\n    const { name, title, completed } = props;\n    return (\n        <Grid.Row>\n            <Grid.Column width={6} textAlign=\"center\">{name}</Grid.Column>\n            <Grid.Column width={6} textAlign=\"center\">{title}</Grid.Column>\n            <Grid.Column width={4} textAlign=\"center\">\n                <Checkbox checked={completed} />\n            </Grid.Column>\n        </Grid.Row>\n    )\n}\n","import React from \"react\";\nimport { Grid, GridColumn } from \"semantic-ui-react\";\nimport { ToDoItem } from './ToDoItem';\n\n\n\nexport class ToDoList  extends React.Component {\n    state = {\n        name: true,\n        title: true,\n        completed: true,\n    }\n\n    render() {\n        const { todos, sortTodos } = this.props;\n        const staticHeader =  ['name', 'title', 'completed']; \n    return (\n        <>\n        <Grid>\n            <Grid.Row className='headerGrid'>\n                {\n                    staticHeader.map((el, index) => (\n                    <GridColumn \n                        key={index}\n                        width={index > 1 ? 4 : 6}  // на момент написания кода в масиве всего 3 эл. => общая сума должна быть 16, колонки разбиты на 6,6,4\n                        textAlign=\"center\" \n                        onClick={() => {\n                            this.setState((prevState) => ({el: !prevState.el})); \n                            sortTodos(todos, this.state.el ? `${el}up` : `${el}down`)}\n                        }\n                        className={`${el}Header`}\n                        title='Push Me'\n                    >\n                        {el[0].toUpperCase() + el.slice(1)} \n                    </GridColumn>\n                    ))\n                }\n            </Grid.Row>\n        </Grid>\n        <Grid>\n        {\n            todos.map((todoEl, index) => (\n                <ToDoItem \n                    key={index}\n                    name={todoEl.user.name}\n                    title={todoEl.title}\n                    completed={todoEl.completed}\n                />\n            ))\n        }\n        </Grid>\n        </>\n    )\n    }\n}\n","export const   sortTodos = (todos, sortField) => {\n    const callbackMap = {\n        titleup: (a,b) => a.title.localeCompare(b.title),\n        titledown: (a,b) => b.title.localeCompare(a.title),\n        nameup: (a,b) => a.user.name.toLowerCase().localeCompare(b.user.name.toLowerCase()),\n        namedown: (a,b) => b.user.name.toLowerCase().localeCompare(a.user.name.toLowerCase()),\n        completedup: (a,b) => a.completed - b.completed,\n        completeddown: (a,b) => b.completed - a.completed,\n    }\n    const callback = callbackMap[sortField] || callbackMap.title;\n    const copyTodos = [ ...todos];\n    \n    return copyTodos.sort(callback);\n}","import React from 'react';\nimport './App.css';\nimport { getTodos, getUsers } from './api';\nimport { ToDoList } from './ToDoList';\nimport { Button } from 'semantic-ui-react';\nimport { sortTodos } from './sortTodos';\n\nclass  App extends React.Component {\n  state = {\n    todos: [],\n    load: false,\n    buttonInnerText: 'Load Information',\n    disableButton: false\n  }\n  sortedList = (array,sortField) => {\n    this.setState({ todos: sortTodos(array, sortField) })\n  }\n  async loadInformation() {\n    this.setState({\n      disableButton: true,\n      buttonInnerText: \"Loading...\",\n    });\n    const [ todos, users ] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]);\n    const fullArr = [ ...todos];\n\n    fullArr.map(el => el.user = users.find(user => user.id === el.userId));\n    this.setState({\n      todos: fullArr,\n      load: true\n    });\n  }\n  render() {\n    const { todos } = this.state;\n    return (\n      <div className=\"App\">\n       {\n         this.state.load ?                   \n        <ToDoList\n          todos={todos}\n          sortTodos={this.sortedList}\n        /> :\n        <Button \n          color=\"green\"\n          inverted\n          onClick={() => this.loadInformation()}\n          disabled={this.state.disableButton}\n        > \n          {this.state.buttonInnerText}\n        </Button> \n       }\n      </div>\n    );\n  }\n}\n\nexport default App;\n// <div style={{textAlign: 'center'}}>Loading...</div> ","export const getTodos = () => {\n    return fetch('https://jsonplaceholder.typicode.com/todos')\n            .then(resp => resp.json());\n}\nexport const getUsers = () => {\n    return fetch('https://jsonplaceholder.typicode.com/users')\n            .then(resp => resp.json());\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}